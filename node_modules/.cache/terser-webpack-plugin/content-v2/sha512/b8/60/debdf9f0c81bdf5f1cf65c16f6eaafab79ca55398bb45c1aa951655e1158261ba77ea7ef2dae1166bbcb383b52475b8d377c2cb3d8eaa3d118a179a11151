{"map":"{\"version\":3,\"sources\":[\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/components/AddTask.js\",\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/components/Task.js\",\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/components/TaskList.js\",\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/components/App.js\",\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/serviceWorker.js\",\"C:/Users/tomek/Desktop/PORTFOLIO/projekty/Projekt 4 - To Do App/src/index.js\"],\"names\":[\"AddTask\",\"minDate\",\"Date\",\"toISOString\",\"slice\",\"state\",\"text\",\"checked\",\"date\",\"_this\",\"handleText\",\"e\",\"setState\",\"target\",\"value\",\"handleCheckbox\",\"handleDate\",\"handleClick\",\"console\",\"log\",\"_this$state\",\"length\",\"props\",\"add\",\"maxDate\",\"this\",\"react_default\",\"a\",\"createElement\",\"className\",\"type\",\"placeholder\",\"onChange\",\"id\",\"htmlFor\",\"min\",\"max\",\"onClick\",\"Component\",\"Task\",\"_props$task\",\"task\",\"active\",\"important\",\"finishDate\",\"style\",\"color\",\"change\",\"delete\",\"finish\",\"toLocaleString\",\"TaskList\",\"tasks\",\"filter\",\"done\",\"sort\",\"b\",\"toLowerCase\",\"activeTasks\",\"map\",\"components_Task\",\"key\",\"doneTasks\",\"Fragment\",\"fontSize\",\"App\",\"counter\",\"deleteTask\",\"Object\",\"toConsumableArray\",\"changeTaskStatus\",\"Array\",\"from\",\"forEach\",\"getTime\",\"addTask\",\"prevState\",\"concat\",\"src_components_AddTask\",\"components_TaskList\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_components_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React, { Component } from \\\"react\\\";\\r\\nimport \\\"./AddTask.css\\\";\\r\\nclass AddTask extends Component {\\r\\n  minDate = new Date().toISOString().slice(0, 10);\\r\\n  state = {\\r\\n    text: \\\"\\\",\\r\\n    checked: false,\\r\\n    date: this.minDate,\\r\\n  };\\r\\n\\r\\n  handleText = (e) => {\\r\\n    this.setState({\\r\\n      text: e.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  handleCheckbox = (e) => {\\r\\n    this.setState({\\r\\n      checked: e.target.checked,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  handleDate = (e) => {\\r\\n    this.setState({\\r\\n      date: e.target.value,\\r\\n    });\\r\\n  };\\r\\n\\r\\n  handleClick = () => {\\r\\n    console.log(\\\"dodaj\\\");\\r\\n\\r\\n    const { text, checked, date } = this.state;\\r\\n    if (text.length > 2) {\\r\\n      const add = this.props.add(text, date, checked);\\r\\n      if (add) {\\r\\n        this.setState({\\r\\n          text: \\\"\\\",\\r\\n          checked: false,\\r\\n          date: this.minDate,\\r\\n        });\\r\\n      }\\r\\n    } else {\\r\\n      console.log(\\\"za krótko\\\");\\r\\n    }\\r\\n  };\\r\\n\\r\\n  render() {\\r\\n    let maxDate = this.minDate.slice(0, 4) * 1 + 1;\\r\\n    // console.log(maxDate);\\r\\n    maxDate = maxDate + \\\"-12-31\\\";\\r\\n\\r\\n    return (\\r\\n      <div className=\\\"form\\\">\\r\\n        <input\\r\\n          type=\\\"text\\\"\\r\\n          placeholder=\\\"dodaj zadanie\\\"\\r\\n          value={this.state.text}\\r\\n          onChange={this.handleText}\\r\\n        />\\r\\n        <input\\r\\n          type=\\\"checkbox\\\"\\r\\n          checked={this.state.checked}\\r\\n          id=\\\"important\\\"\\r\\n          onChange={this.handleCheckbox}\\r\\n        />\\r\\n        <label htmlFor=\\\"important\\\">Priorytet</label>\\r\\n        <br />\\r\\n        <label htmlFor=\\\"date\\\">Do kiedy zrobić</label>\\r\\n        <input\\r\\n          type=\\\"date\\\"\\r\\n          value={this.state.date}\\r\\n          min={this.minDate}\\r\\n          max={maxDate}\\r\\n          onChange={this.handleDate}\\r\\n        />\\r\\n        <br />\\r\\n        <button className=\\\"add\\\" onClick={this.handleClick}>\\r\\n          Dodaj\\r\\n        </button>\\r\\n      </div>\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default AddTask;\\r\\n\",\"import React from 'react';\\r\\n\\r\\nconst Task = (props) => {\\r\\n\\r\\n  const style = {\\r\\n    color: 'red',\\r\\n  }\\r\\n\\r\\n  const { text, date, id, active, important, finishDate } = props.task;\\r\\n\\r\\n  if (active) {\\r\\n    return (\\r\\n      <div>\\r\\n        <p>\\r\\n          <strong style={important ? style : null}>{text}</strong> - do <span>{date} </span>\\r\\n          <button onClick={() => props.change(id)}>Zostało zrobione</button>\\r\\n          <button onClick={() => props.delete(id)}>X</button>\\r\\n        </p>\\r\\n\\r\\n      </div>\\r\\n    );\\r\\n  } else {\\r\\n\\r\\n    const finish = new Date(finishDate).toLocaleString()\\r\\n    return (\\r\\n      <div>\\r\\n\\r\\n        <p>\\r\\n          <strong>{text}</strong><em> (zrobić do {date})</em><br />\\r\\n          - potwierdzenie wykonania<span> {finish}</span>\\r\\n\\r\\n          <button onClick={() => props.delete(id)}>X</button>\\r\\n        </p>\\r\\n      </div>\\r\\n    )\\r\\n  }\\r\\n}\\r\\n\\r\\nexport default Task;\",\"import React from \\\"react\\\";\\r\\nimport Task from \\\"./Task\\\";\\r\\n\\r\\nconst TaskList = (props) => {\\r\\n  const active = props.tasks.filter((task) => task.active);\\r\\n  const done = props.tasks.filter((task) => !task.active);\\r\\n\\r\\n  if (done.length >= 2) {\\r\\n    done.sort((a, b) => {\\r\\n      if (a.finishDate < b.finishDate) {\\r\\n        return 1;\\r\\n      }\\r\\n      if (a.finishDate > b.finishDate) {\\r\\n        return -1;\\r\\n      }\\r\\n      return 0;\\r\\n    });\\r\\n  }\\r\\n  if (active.length >= 2) {\\r\\n    active.sort((a, b) => {\\r\\n      a = a.text.toLowerCase();\\r\\n      b = b.text.toLowerCase();\\r\\n\\r\\n      if (a < b) return -1;\\r\\n      if (a > b) return 1;\\r\\n      return 0;\\r\\n    });\\r\\n  }\\r\\n\\r\\n  const activeTasks = active.map((task) => (\\r\\n    <Task\\r\\n      key={task.id}\\r\\n      task={task}\\r\\n      delete={props.delete}\\r\\n      change={props.change}\\r\\n    />\\r\\n  ));\\r\\n  const doneTasks = done.map((task) => (\\r\\n    <Task\\r\\n      key={task.id}\\r\\n      task={task}\\r\\n      delete={props.delete}\\r\\n      change={props.change}\\r\\n    />\\r\\n  ));\\r\\n\\r\\n  return (\\r\\n    <>\\r\\n      <div className=\\\"active\\\">\\r\\n        <h1>Zadania do zrobienia</h1>\\r\\n        {activeTasks.length > 0 ? activeTasks : <p>Brak zadań</p>}\\r\\n      </div>\\r\\n\\r\\n      <hr />\\r\\n\\r\\n      <div className=\\\"done\\\">\\r\\n        <h3>\\r\\n          Zadania zrobione <em>({done.length})</em>\\r\\n        </h3>\\r\\n        {done.length > 5 && (\\r\\n          <span style={{ fontSize: 10 }}>\\r\\n            Wyświetlonych jest jedynie 5 ostatnich zadań\\r\\n          </span>\\r\\n        )}\\r\\n        {doneTasks.slice(0, 5)}\\r\\n      </div>\\r\\n    </>\\r\\n  );\\r\\n};\\r\\n\\r\\nexport default TaskList;\\r\\n\",\"import React, { Component } from \\\"react\\\";\\nimport AddTask from \\\"./AddTask\\\";\\nimport TaskList from \\\"./TaskList\\\";\\nimport \\\"./App.css\\\";\\n\\nclass App extends Component {\\n  counter = 9;\\n  state = {\\n    tasks: [],\\n  };\\n\\n  deleteTask = (id) => {\\n    let tasks = [...this.state.tasks];\\n    tasks = tasks.filter((task) => task.id !== id);\\n    this.setState({\\n      tasks,\\n    });\\n  };\\n\\n  changeTaskStatus = (id) => {\\n    const tasks = Array.from(this.state.tasks);\\n    tasks.forEach((task) => {\\n      if (task.id === id) {\\n        task.active = false;\\n        task.finishDate = new Date().getTime();\\n      }\\n    });\\n    this.setState({\\n      tasks,\\n    });\\n  };\\n\\n  addTask = (text, date, important) => {\\n    const task = {\\n      id: this.counter,\\n      text,\\n      date,\\n      important,\\n      active: true,\\n      finishDate: null,\\n    };\\n    this.counter++;\\n    console.log(task, this.counter);\\n\\n    this.setState((prevState) => ({\\n      tasks: [...prevState.tasks, task],\\n    }));\\n\\n    return true;\\n  };\\n\\n  render() {\\n    return (\\n      <div className=\\\"App\\\">\\n        <h1>TO DO APP</h1>\\n        <AddTask add={this.addTask} />\\n        <TaskList\\n          tasks={this.state.tasks}\\n          delete={this.deleteTask}\\n          change={this.changeTaskStatus}\\n        />\\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './components/App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{14:function(e,t,a){},16:function(e,t,a){},18:function(e,t,a){},20:function(e,t,a){\"use strict\";a.r(t);var n=a(0),r=a.n(n),c=a(8),l=a.n(c),i=(a(14),a(6)),o=a(1),s=a(2),u=a(4),d=a(3),h=a(5),m=(a(16),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).minDate=(new Date).toISOString().slice(0,10),a.state={text:\"\",checked:!1,date:a.minDate},a.handleText=function(e){a.setState({text:e.target.value})},a.handleCheckbox=function(e){a.setState({checked:e.target.checked})},a.handleDate=function(e){a.setState({date:e.target.value})},a.handleClick=function(){console.log(\"dodaj\");var e=a.state,t=e.text,n=e.checked,r=e.date;t.length>2?a.props.add(t,r,n)&&a.setState({text:\"\",checked:!1,date:a.minDate}):console.log(\"za kr\\xf3tko\")},a}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){var e=1*this.minDate.slice(0,4)+1;return e+=\"-12-31\",r.a.createElement(\"div\",{className:\"form\"},r.a.createElement(\"input\",{type:\"text\",placeholder:\"dodaj zadanie\",value:this.state.text,onChange:this.handleText}),r.a.createElement(\"input\",{type:\"checkbox\",checked:this.state.checked,id:\"important\",onChange:this.handleCheckbox}),r.a.createElement(\"label\",{htmlFor:\"important\"},\"Priorytet\"),r.a.createElement(\"br\",null),r.a.createElement(\"label\",{htmlFor:\"date\"},\"Do kiedy zrobi\\u0107\"),r.a.createElement(\"input\",{type:\"date\",value:this.state.date,min:this.minDate,max:e,onChange:this.handleDate}),r.a.createElement(\"br\",null),r.a.createElement(\"button\",{className:\"add\",onClick:this.handleClick},\"Dodaj\"))}}]),t}(n.Component)),f=function(e){var t=e.task,a=t.text,n=t.date,c=t.id,l=t.active,i=t.important,o=t.finishDate;if(l)return r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,r.a.createElement(\"strong\",{style:i?{color:\"red\"}:null},a),\" - do \",r.a.createElement(\"span\",null,n,\" \"),r.a.createElement(\"button\",{onClick:function(){return e.change(c)}},\"Zosta\\u0142o zrobione\"),r.a.createElement(\"button\",{onClick:function(){return e.delete(c)}},\"X\")));var s=new Date(o).toLocaleString();return r.a.createElement(\"div\",null,r.a.createElement(\"p\",null,r.a.createElement(\"strong\",null,a),r.a.createElement(\"em\",null,\" (zrobi\\u0107 do \",n,\")\"),r.a.createElement(\"br\",null),\"- potwierdzenie wykonania\",r.a.createElement(\"span\",null,\" \",s),r.a.createElement(\"button\",{onClick:function(){return e.delete(c)}},\"X\")))},k=function(e){var t=e.tasks.filter(function(e){return e.active}),a=e.tasks.filter(function(e){return!e.active});a.length>=2&&a.sort(function(e,t){return e.finishDate<t.finishDate?1:e.finishDate>t.finishDate?-1:0}),t.length>=2&&t.sort(function(e,t){return(e=e.text.toLowerCase())<(t=t.text.toLowerCase())?-1:e>t?1:0});var n=t.map(function(t){return r.a.createElement(f,{key:t.id,task:t,delete:e.delete,change:e.change})}),c=a.map(function(t){return r.a.createElement(f,{key:t.id,task:t,delete:e.delete,change:e.change})});return r.a.createElement(r.a.Fragment,null,r.a.createElement(\"div\",{className:\"active\"},r.a.createElement(\"h1\",null,\"Zadania do zrobienia\"),n.length>0?n:r.a.createElement(\"p\",null,\"Brak zada\\u0144\")),r.a.createElement(\"hr\",null),r.a.createElement(\"div\",{className:\"done\"},r.a.createElement(\"h3\",null,\"Zadania zrobione \",r.a.createElement(\"em\",null,\"(\",a.length,\")\")),a.length>5&&r.a.createElement(\"span\",{style:{fontSize:10}},\"Wy\\u015bwietlonych jest jedynie 5 ostatnich zada\\u0144\"),c.slice(0,5)))},E=(a(18),function(e){function t(){var e,a;Object(o.a)(this,t);for(var n=arguments.length,r=new Array(n),c=0;c<n;c++)r[c]=arguments[c];return(a=Object(u.a)(this,(e=Object(d.a)(t)).call.apply(e,[this].concat(r)))).counter=9,a.state={tasks:[]},a.deleteTask=function(e){var t=Object(i.a)(a.state.tasks);t=t.filter(function(t){return t.id!==e}),a.setState({tasks:t})},a.changeTaskStatus=function(e){var t=Array.from(a.state.tasks);t.forEach(function(t){t.id===e&&(t.active=!1,t.finishDate=(new Date).getTime())}),a.setState({tasks:t})},a.addTask=function(e,t,n){var r={id:a.counter,text:e,date:t,important:n,active:!0,finishDate:null};return a.counter++,console.log(r,a.counter),a.setState(function(e){return{tasks:[].concat(Object(i.a)(e.tasks),[r])}}),!0},a}return Object(h.a)(t,e),Object(s.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"App\"},r.a.createElement(\"h1\",null,\"TO DO APP\"),r.a.createElement(m,{add:this.addTask}),r.a.createElement(k,{tasks:this.state.tasks,delete:this.deleteTask,change:this.changeTaskStatus}))}}]),t}(n.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(r.a.createElement(E,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},9:function(e,t,a){e.exports=a(20)}},[[9,2,1]]]);","extractedComments":[]}